1.	**ウィンドウサイズ**: ウィンドウサイズが size(800, 400) であること．
2.	**地面の表示**: ウィンドウ下部に地面領域を描画していること．
3. **キャラクタの初期位置**: プログラム実行開始時，円（またはキャラクタ）がX座標400で静止していること．また，Y座標は円の下端が地面に接するように設定されていること．
4. **左右移動の実装**: 円が静止している状態から，キーボードの左キーまたは右キーを押すと，押した方向に円が移動し始めること．（満たさない場合は3点減点）
5. **x方向速度**: キーボードの左キーを押すたびに，円のx方向速度が-1(px/frame)されること．また，キーボードの右キーを押すたびに，円のx方向速度が+1(px/frame)されること．
6. **ループ移動**: 円が画面の右端付近にくると左端付近から表示するようにしていること．また，円が画面の左端付近までくると右端付近から表示するようにしていること．
7.	**ジャンプの実装**: 円が地面に接地しているとき，キーボードの上キーを押すと，円がジャンプすること．ジャンプとは，円が上方向に移動したあと下方向に移動し，一定時間後に再度地面に接地するような動作である．（満たしていない場合は3点減点）
8. **ジャンプの終了**: ジャンプの後，円が地面に接地したらy方向の速度が0となるように実装されていること．
9. **ジャンプはx方向に影響しない**: キーボード上キーを押したとき，円のx方向の速度は変化させないこと．

### 補足
- 条件に含まれる全ての「円」は「キャラクタ」でも良いものとします．
- 条件「左右移動の実装」と「x方向速度」は，この2つを組み合わせて「キーボード左右を押した際に全く動かない場合は3点減点」「動きはするが，速度の指定がおかしい場合は1点減点」とすることを意図しています．
- 「ループ移動」について，開始直後に左方向に移動させた場合にうまくいかない誤答が多いです．x % 800という計算式は，xが負の値の時計算結果も負となることに注意が必要です．
- ジャンプの挙動は問いません．重力の影響を受けるような運動が望ましいですが，等速直線運動であっても減点しないものとします．ただし，ジャンプしているかどうかが視認できないような挙動は減点対象です．